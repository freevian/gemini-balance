# 生产环境 Docker Compose 配置
# 使用自定义构建的镜像

volumes:
  mysql_data:

services:
  gemini-balance:
    build:
      context: .
      dockerfile: Dockerfile
    image: gemini-balance:custom
    container_name: gemini-balance-custom
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env.production
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import requests; exit(0) if requests.get('http://localhost:8000/health').status_code == 200 else exit(1)\""]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ./files:/app/files  # 挂载文件存储目录

  mysql:
    image: mysql:8
    container_name: gemini-balance-mysql-custom
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-your_root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # 可选：数据库管理工具
  # adminer:
  #   image: adminer:latest
  #   container_name: gemini-balance-adminer
  #   restart: unless-stopped
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     mysql:
  #       condition: service_healthy